@model PhysicianLocator.Models.EducationGridModel

@{
    ViewBag.Title = "EducationGridModel";
}

<h2>Edit Education</h2>

@*@using (Html.BeginForm("Edit_education", "GridUser", FormMethod.Post))*@
@using (Html.BeginForm("Edit_education", "GridUser", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        @ViewBag.institute
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentEducationInstituteId, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.CurrentEducationInstituteId, "", new { @class = "text-danger" })
                @(Html.Kendo().AutoComplete()
          .Name("EditInstitute")
          .Filter("startswith")
          //.Value(Model.InstituteName)
          .HtmlAttributes(new { style = "width: 280px" })
          .Placeholder("Select institue...")
          .DataTextField("InstitueName")

          //.OptionLabel("Select country...")
          .DataSource(source => source
          .Custom()
          .Transport(transport => transport
          .Read(read =>
          {
              read.Action("InstitueName", "AccountManagment");


          })))


                )
               </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control" } })
               @* @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @(Html.Kendo().DatePicker()
                          .Name("SD")
                          //.Value(Model.StartDate)
                          .HtmlAttributes(new { style = "width: 280px" })
                          .Format("dd-MM-yyyy")

                         )       
           @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                @(Html.Kendo().DatePicker()
                          .Name("ED")
                          //.Value(Model.StartDate)
                          .HtmlAttributes(new { style = "width: 280px" })
                          .Format("dd-MM-yyyy")

                )
                
            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>*@
    </div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        font-size: large;
        color: red;
    }
</style>