@model PhysicianLocator.Models.HealthGridModel

@using (Html.BeginForm("Edit_health", "GridUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>HealthGridModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.filename, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(m => m.filename ,new { type = "file", name = "uploadFile" ,value = "Model.filename"})*@
              @*  @Html.TextBoxFor(m => m.filename, new { type = "file", name = "uploadFile" ,value="Model.filename"})<br /><br />*@
                <input type="file" name="uploadFile" value="@Model.filename"/><br />
             
            </div>
        </div>
     
        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            @(Html.Kendo().DatePicker()
                          .Name("ED")
                          //.Value(Model.StartDate)
                          .HtmlAttributes(new { style = "width: 280px" })
                          .Format("dd-MM-yyyy")
                          )
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
               @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            @(Html.Kendo().DatePicker()
                          .Name("SD")
                          //.Value(Model.StartDate)
                          .HtmlAttributes(new { style = "width: 280px" })
                          .Format("dd-MM-yyyy")
                          )
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
