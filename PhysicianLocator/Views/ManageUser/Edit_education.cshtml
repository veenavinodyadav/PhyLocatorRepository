@*@model PhysicianLocator.Models.PhysicianEducationViewModel

@{
    ViewBag.Title = "Save";
    Layout = null;
}

<h4>Edit Education</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })     
        @{ string s = (string)ViewBag.Message;}
              <div class="form-group">
              @Html.LabelFor(model => model.CurrentEducationInstituteId, htmlAttributes: new { @class = "control-label col-md-4 required" })
             <div class="col-md-8">
                @Html.ValidationMessageFor(model => model.CurrentEducationInstituteId, "", new { @class = "text-danger" })
                <div class="demo-section k-content">
                    @(Html.Kendo().AutoComplete()
                        .Name("kendoInstitute")
                        .Filter("startswith")
                        .HtmlAttributes(new {  required = "required", validationmessage = "Please enter institute name", style = "width:280px" })
                        .Placeholder("Select Institute...")
                        .DataTextField("InstitueName")
                        .Value(s)                      
                        .DataSource(source => source
                        .Custom()
                        .Transport(transport => transport
                        .Read(read =>
                        {
                            read.Action("InstitueName", "AccountManagment");
                        })))
                    )

                    <div class="demo-hint">Start typing the name of an Institute</div>
                </div>
                <style>
                    .k-autocomplete {
                        width: 50%;
                    }
                </style>
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-4 required" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control", id = "Degree", @placeholder = "Degree" } })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-4 required",id="edu_startdate" })
            <div class="col-md-8">
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                @(Html.Kendo().DatePicker()
                  .Name("kendoStartDate")
                  .HtmlAttributes(new { placeholder = "Year of Passing", required = "required", validationmessage = "Please pick Year of passing", style = "width:280px" })
                  .Value(Model.StartDate)
                  .Start(CalendarView.Decade)
                  .Depth(CalendarView.Decade)
                   .Footer(false)
                  .Format("yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)
                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))


            </div>
        </div>

        <hr />
      
        <div class="">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="Cancel" id="clsbutton" name="clsbutton" class="btn btn-default" , onclick="Closepopup()" />
            </div>
        </div>
    </div>
}
<script>
            $(function () {
                $("form").kendoValidator();
            });

            function Closepopup() {
                $(".ui-dialog-titlebar-close").click();
            }
           
            $(document).ready(function () {
                $("#kendoStartDate").bind("focus", function () {
                    $(this).data("kendoDatePicker").open();
                });

                    var data =@Html.Raw(ViewBag.Markers);
                 
                    $("#kendoHospitalId").kendoAutoComplete({
                        dataSource: data,
                        filter: "startswith",
                        change: function () {
                            var found = false;
                            var value = this.value();
                            var data = this.dataSource.view();

                            for (var idx = 0, length = data.length; idx < length; idx++) {
                                if (data[idx] === value) {
                                    found = true;
                                    break;
                                }
                            }

                            if (!found) {
                                this.value("");
                                alert("Custom values are not allowed");
                            }
                        }
                    });
                });


   

</script>*@

@model PhysicianLocator.Models.PhysicianEducationViewModel

@{
    ViewBag.Title = "Add Education";
    Layout = null;
}

<h4>Edit Education</h4>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @{ string s = (string)ViewBag.Message;}
        <div class="form-group">
            @Html.LabelFor(model => model.CurrentEducationInstituteId, htmlAttributes: new { @class = "control-label col-md-4 required" })
            <div class="col-md-8">
                @Html.ValidationMessageFor(model => model.CurrentEducationInstituteId, "", new { @class = "text-danger" })
                <div class="demo-section k-content">
                    @(Html.Kendo().AutoComplete()
         .Value(s)
                                      .Name("kendoInstitute")
                                      .Filter("startswith")
                                      .HtmlAttributes(new { required = "required", validationmessage = "Please enter institute name", style = "width:280px" })
                                      .Placeholder("Select Institute...")
                                      .DataTextField("InstitueName")
                                      .DataSource(source => source
                                      .Custom()
                                      .Transport(transport => transport
                                      .Read(read =>
                                      {
                                          read.Action("InstitueName", "AccountManagment");
                                      }
                                             )))
                    )

                    <div class="demo-hint">Start typing the name of an Institute</div>

                </div>
                <style>
                    .k-autocomplete {
                        width: 50%;
                    }
                </style>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-4 required" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control", id = "Degree", @placeholder = "Degree" } })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-4 required" })
            <div class="col-md-8">
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                @(Html.Kendo().DatePicker()
                  .Value(Model.StartDate)
                  .Name("kendoStartDate")
                  .HtmlAttributes(new { placeholder = "Year of Passing", required = "required", validationmessage = "Please pick Year of passing", style = "width:280px" })
                  .Start(CalendarView.Decade)
                  .Depth(CalendarView.Decade)
                .Max("01-01-2018")
                  .Footer(false)

                  .Format("yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))


            </div>
        </div>

        <hr />
        <div class="">
            <div class="col-md-offset-4 col-md-8">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="Cancel" id="clsbutton" name="clsbutton" class="btn btn-default" , onclick="Closepopup()" />
            </div>
        </div>
    </div>
}

<script>
            $(document).ready(function () {



                $("#kendoStartDate").bind("focus", function () {
                    $(this).data("kendoDatePicker").open();
                });
            });

            $(function () {
                $("form").kendoValidator();
            });

            function Closepopup() {
                $(".ui-dialog-titlebar-close").click();
            }

</script>

