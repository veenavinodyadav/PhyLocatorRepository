@model PhysicianLocator.Models.HealthHistoryViewModel

@{
    ViewBag.Title = "Save_HealthHistory";
    Layout = null;
}

<h2>Add Health Details</h2>


   @using (Html.BeginForm("Save_HealthHistory", "ManageUser", FormMethod.Post, new { enctype = "multipart/form-data" }))
       
               {
                   @Html.AntiForgeryToken()

                   <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DatePicker()
      .Name("kendoStartDate")

     //.Value(Model.StartDate)
      .HtmlAttributes(new { placeholder = "Enter Start Date", required = "required", validationmessage = "Please pick start date.", style = "width:280px" })
      .Format("dd-MM-yyyy")
      .Events(e => e
      .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

      .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
     ))


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DatePicker()
      .Name("kendoEndDate")
 //.Value(Model.EndDate)
 .HtmlAttributes(new { placeholder = "Enter End Date", required = "required", validationmessage = "Please pick End date.", style = "width:280px" }).Format("dd-MM-yyyy")
      .Events(e => e
      .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

      .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
     ))
            </div>
        </div>
        <div class="form-group">
            <label id="lbl_upload" class="control-label col-md-2">Document</label>
            <div class="col-md-10">

                <input type="file" name="upload" />
            </div>
        </div>

     

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
                <input type="button" value="Cancel" id="clsbutton" name="clsbutton" class="btn btn-default" , onclick="Closepopup()" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
        $(function () {
            $("form").kendoValidator();
        });

        function Closepopup() {
            $(".ui-dialog-titlebar-close").click();
        }
</script>