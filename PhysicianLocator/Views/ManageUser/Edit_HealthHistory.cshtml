@model PhysicianLocator.Models.HealthHistoryViewModel

@{
    ViewBag.Title = "Edit_HealthHistory";
    Layout = null;
}

<h2>Edit Health Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.HealthHistoryId)

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DatePicker()
                  .Name("kendoStartDate")
                  .Value(Model.StartDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @(Html.Kendo().DatePicker()
                  .Name("kendoEndDate")
                  .Value(Model.EndDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))
            </div>
        </div>

        <div class="">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<script>
        $(function () {
            $("form").kendoValidator();
        });
</script>
