@model PhysicianLocator.Models.PhysicianEducationViewModel

@{
    ViewBag.Title = "_EducationDetails";
}
@*@Model.UserId;*@
@{
    //var urlid = Url.RequestContext.RouteData.Values["id"];
    //  int idd = Convert.ToInt32(urlid);


    int idd = (int)ViewBag.message;
    }
@ViewBag.message
<h2>Add Education</h2>
@using (Html.BeginForm("PopupEducation", "ManageUser", new { @Id = idd @*Url.RequestContext.RouteData.Values["id"]*@ }, FormMethod.Get, new { name = "frm" }))


{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    <div class="form-horizontal">
      
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
  

        <div class="form-group">
            @Html.LabelFor(model => model.CurrentEducationInstituteId, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.CurrentEducationInstituteId, "", new { @class = "text-danger" })
                <div class="demo-section k-content">

                    @(Html.Kendo().AutoComplete()
.Name("kendoInstitute")
.Filter("startswith")
//.Value(Model.InstituteName)

.Placeholder("Select institue...")
.DataTextField("InstitueName")

//.OptionLabel("Select country...")
.DataSource(source => source
.Custom()
.Transport(transport => transport
.Read(read =>
{
    read.Action("InstitueName", "AccountManagment");
})))
                   )

                    <div class="demo-hint">Start typing the name of an Institue</div>

                </div>
                <style>
                    .k-autocomplete {
                        width: 50%;
                    }
                </style>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Degree, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Degree, new { htmlAttributes = new { @class = "form-control", id = "Degree" } })
                @Html.ValidationMessageFor(model => model.Degree, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })

                @(Html.Kendo().DatePicker()
                  .Name("kendoStartDate")

                  //.Value(Model.StartDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                            function()
                            {
                            //Handle the open event inline.
                            }
                        </text>)

                  .Change(@<text>
                                function()
                                {
                                //Handle the change event inline.
                                }
                        </text>)
                 ))


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                @(Html.Kendo().DatePicker()
                  .Name("kendoEndDate")
                  //.Value(Model.EndDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                            function()
                            {
                            //Handle the open event inline.
                            }
                        </text>)

                  .Change(@<text>
                                function()
                                {
                                //Handle the change event inline.
                                }
                        </text>)
                 ))
            </div>
        </div>

      
      

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" id="submit" value="Save" class="btn btn-default" onclick="location.href='@Url.Action("PopupEducation", "ManageUser", new { @Id = idd@*Url.RequestContext.RouteData.Values["id"]*@ })'" @*class="close" data-dismiss="modal" aria-hidden="true"/>*@/>
            </div>
        </div>
    </div>

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>
        @*<button type="submit" class="btn btn-success"><i class="glyphicon glyphicon-ok" onclick="location.href='@Url.Action("PopupEducation", "ManageUser",new { @Id = Url.RequestContext.RouteData.Values["id"] })'"></i> Save</button>*@

        @*<h4 class="modal-title" id="myModalLabel">FriendsInfo</h4>*@
    </div>
}

@*<script type="text/javascript">
   
    //$("form").submit(function (e) {
    //    alert(($("#Degree").val()))
    //    if ($("kendoEndDate").val() == "") 
    //        e.preventDefault();
    //    //var formId = this.id;  // "this" is a reference to the submitted form
    //    //alert(formId);
    //    //return true;
    //});


    //$("#submit").click(function (e) {
    //    var Degree = $("#Degree").val();
    //    if (Degree == "") {
    //        alert($("#Degree").val());
    //        e.preventDefault();
           
    //    }
    //});


    
</script>*@




<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

<script>

        $(document).ready(function () {
            $("form[name='frm']").validate({
                errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
                errorElement: 'div',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'Degree': {
                        required: true,
                        //depends: function (element) {
                        //    return $("#category").val() == "none";
                        }

                },
                messages: {
                    'Degree': 'Please Select category name'

                },

                submitHandler: function (form) {
                    return false;
                }

            });
        });
</script>
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        font-size: large;
        color: red;
    }
</style>