@model PhysicianLocator.Models.PhysicianExperienceViewModel

@{
    ViewBag.Title = "_ExperienceDetails";
}

<h2>Add Education</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ReasonForLeaving, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReasonForLeaving, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReasonForLeaving, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.JoinStartDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.JoinStartDate, "", new { @class = "text-danger" })

                @(Html.Kendo().DatePicker()
                          .Name("kendoJSD")
           .HtmlAttributes(new { style = "width: 280px" })

                       //.Value(Model.JoinStartDate)
                       //.HtmlAttributes(new { style = "width: 280px" })
                       //.Format("dd-MM-yyyy")
                       )


            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.JoinEndDate, htmlAttributes: new { @class = "control-label col-md-2 required" })
            <div class="col-md-10">
                @Html.ValidationMessageFor(model => model.JoinEndDate, "", new { @class = "text-danger" })

                @(Html.Kendo().DatePicker()
                          .Name("kendoJED")
                   .HtmlAttributes(new { placeholder = "Date", required = "required", validationmessage = "Enter valid date", style = "width:280px" })


                      //.Value(Model.JoinEndDate)
                      //.HtmlAttributes(new { style = "width: 280px" })
                      //.Format("dd-MM-yyyy")
                      )


            </div>
        </div>

        




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" onclick="location.href='@Url.Action("PopupExperience", "ManageUser",new { @Id = Url.RequestContext.RouteData.Values["id"] })'" @*class="close" data-dismiss="modal" aria-hidden="true"/>*@ />

            </div>
        </div>
    </div>

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>

        @*<h4 class="modal-title" id="myModalLabel">FriendsInfo</h4>*@
    </div>
}
<style>
    .required:after {
        content: "*";
        font-weight: bold;
        font-size: large;
        color: red;
    }
</style>



        @*//window.close();*@


   
    <script src="/Scripts/jquery.validate.js"></script>
    <script src="/Scripts/jquery.validate.unobtrusive.js"></script>

    <script>

        $(document).ready(function () {
            $('form').validate({
                errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
                errorElement: 'div',
                errorPlacement: function (error, e) {
                    e.parents('.form-group > div').append(error);
                },
                highlight: function (e) {

                    $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                    $(e).closest('.help-block').remove();
                },
                success: function (e) {
                    e.closest('.form-group').removeClass('has-success has-error');
                    e.closest('.help-block').remove();
                },
                rules: {
                    'Designation': {
                        required: true,
                        //depends: function (element) {
                        //    return $("#category").val() == "none";
                        }
                  
                },
                messages: {
                    'Designation': 'Please Select category name'
                  
                }

            });
        });
    </script>