@model PhysicianLocator.Models.HealthHistoryViewModel

@{
    ViewBag.Title = "_HealthDetails";
}

@{
    int idd = (int)ViewBag.message;
}

<h2>Add Education</h2>
@using (Html.BeginForm("PopupHealth", "ManageUser", new { Id=@idd }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DatePicker()
                  .Name("kendoStartDate")

                  //.Value(Model.StartDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @(Html.Kendo().DatePicker()
                  .Name("kendoEndDate")
                  //.Value(Model.EndDate)
                  .HtmlAttributes(new { style = "width: 280px" })
                  .Format("dd-MM-yyyy")
                  .Events(e => e
                  .Open(@<text>
                    function()
                    {
                    //Handle the open event inline.
                    }
                </text>)

                  .Change(@<text>
                        function()
                        {
                        //Handle the change event inline.
                        }
                </text>)
                 ))
            </div>
        </div>
        <div class="form-group">
            <label id="lbl_upload" class="control-label col-md-2">Document</label>
            <div class="col-md-10">

                <input type="file" name="upload" id="upload" accept=".png,.jpg,.jpeg,.gif,.tif" />

            </div>
            </div>
   
          


            <br />



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" id="submit" value="Save" class="btn btn-default" onclick="location.href='@Url.Action("PopupHealth", "ManageUser", new { @Id = idd@*Url.RequestContext.RouteData.Values["id"]*@ })'" @*class="close" data-dismiss="modal" aria-hidden="true"/>*@ />
                </div>
            </div>
        </div>

    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">×</button>

    </div>
}







