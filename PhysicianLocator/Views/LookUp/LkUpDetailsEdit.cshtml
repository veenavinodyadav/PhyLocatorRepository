@model PhysicianLocator.Models.LookupDetailViewModel

@{
    ViewBag.Title = "LkUpDetailsEdit";
}

<h2 class="martop0">Edit Details</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    HtmlHelper.UnobtrusiveJavaScriptEnabled = false;
    <div class="form-horizontal">
       
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LookupDetailId)

        <div class="form-group">
            @Html.LabelFor(model => model.LookupCategoryId, "Category Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("select", "select.....")
                @Html.ValidationMessageFor(model => model.LookupCategoryId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SortOrder, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SortOrder, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SortOrder, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Key, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Key, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Key, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Value, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Value, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Value, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.IsActive)
                    @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn"  title="Update Details"/>@Html.ActionLink("View list of Details", "LkUpDetailsView", "LookUp", new { @class = "btn pull-right", title = "View list of Details" })
            </div>
        </div>
    </div>
}

<script src="/Scripts/jquery.unobtrusive-ajax.js"></script>
<script src="/Scripts/jquery.validate.js"></script>
<script src="/Scripts/jquery.validate.unobtrusive.js"></script>

<script>

    $(document).ready(function () {
        $('form').validate({
            errorClass: 'help-block animation-slideDown', // You can change the animation class for a different entrance animation - check animations page
            errorElement: 'div',
            errorPlacement: function (error, e) {
                e.parents('.form-group > div').append(error);
            },
            highlight: function (e) {

                $(e).closest('.form-group').removeClass('has-success has-error').addClass('has-error');
                $(e).closest('.help-block').remove();
            },
            success: function (e) {
                e.closest('.form-group').removeClass('has-success has-error');
                e.closest('.help-block').remove();
            },
            rules: {
                'category': {
                    required: true,
                    //depends: function (element) {
                    //    return $("#category").val() == "none";
                    //}
                },
                'SortOrder': {
                    required: true,


                },
                'Key': {
                    required: true,


                },
                'Value': {
                    required: true,

                }
            },
            messages: {
                'category': 'Please Select category name',
                'SortOrder': 'Please enter SortOrder',
                'Key': 'Please enter Key ',
                'Value': 'Please enter value',
            }

        });
    });
</script>

@*<script>
            $(function () {
                $("form").kendoValidator();
            });
    </script>*@
